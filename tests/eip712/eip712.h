/**
 * @file eip712.c
 * @author  Cypherock X1 Team
 * @brief
 *
 * @copyright Copyright (c) 2022 HODL TECH PTE LTD
 * <br/> You may obtain a copy of license at <a href="https://mitcc.org/"
 *target=_blank>https://mitcc.org/</a>
 *
 ******************************************************************************
 * @attention
 *
 * (c) Copyright 2022 by HODL TECH PTE LTD
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *
 * "Commons Clause" License Condition v1.0
 *
 * The Software is provided to you by the Licensor under the License,
 * as defined below, subject to the following condition.
 *
 * Without limiting other conditions in the License, the grant of
 * rights under the License will not include, and the License does not
 * grant to you, the right to Sell the Software.
 *
 * For purposes of the foregoing, "Sell" means practicing any or all
 * of the rights granted to you under the License to provide to third
 * parties, for a fee or other consideration (including without
 * limitation fees for hosting or consulting/ support services related
 * to the Software), a product or service whose value derives, entirely
 * or substantially, from the functionality of the Software. Any license
 * notice or attribution required by the License must also include
 * this Commons Clause License Condition notice.
 *
 * Software: All X1Wallet associated files.
 * License: MIT
 * Licensor: HODL TECH PTE LTD
 *
 ******************************************************************************
 */
#define EIP712_UNIT_TESTS
#ifdef EIP712_UNIT_TESTS

#include "eth.h"

void eip712_test_hash_struct() {
  MessageData message = MessageData_init_zero;
  uint8_t received_buffer[] = {
      0x08, 0x03, 0x1a, 0xd7, 0x05, 0x0a, 0xc8, 0x01, 0x0a, 0x06, 0x64, 0x6f,
      0x6d, 0x61, 0x69, 0x6e, 0x10, 0x08, 0x18, 0x04, 0x22, 0x0c, 0x45, 0x49,
      0x50, 0x37, 0x31, 0x32, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x32, 0x20,
      0xdf, 0x91, 0x4c, 0x3c, 0x27, 0xad, 0x4d, 0xf3, 0x41, 0xd7, 0x79, 0xce,
      0xbb, 0x08, 0xe6, 0x6e, 0xa1, 0xc9, 0x42, 0xb2, 0xe8, 0x72, 0x09, 0x98,
      0xf3, 0x02, 0x29, 0x61, 0x01, 0x02, 0x13, 0xd9, 0x3a, 0x1e, 0x0a, 0x04,
      0x6e, 0x61, 0x6d, 0x65, 0x10, 0x04, 0x18, 0x0a, 0x22, 0x06, 0x73, 0x74,
      0x72, 0x69, 0x6e, 0x67, 0x2a, 0x0a, 0x45, 0x74, 0x68, 0x65, 0x72, 0x20,
      0x4d, 0x61, 0x69, 0x6c, 0x3a, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
      0x69, 0x6f, 0x6e, 0x10, 0x04, 0x18, 0x01, 0x22, 0x06, 0x73, 0x74, 0x72,
      0x69, 0x6e, 0x67, 0x2a, 0x01, 0x31, 0x3a, 0x18, 0x0a, 0x07, 0x63, 0x68,
      0x61, 0x69, 0x6e, 0x49, 0x64, 0x10, 0x02, 0x18, 0x02, 0x22, 0x05, 0x69,
      0x6e, 0x74, 0x31, 0x36, 0x2a, 0x02, 0x00, 0x01, 0x3a, 0x36, 0x0a, 0x11,
      0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
      0x74, 0x72, 0x61, 0x63, 0x74, 0x10, 0x06, 0x18, 0x14, 0x22, 0x07, 0x61,
      0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0x14, 0xcc, 0xcc, 0xcc, 0xcc,
      0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc,
      0xcc, 0xcc, 0xcc, 0xcc, 0x12, 0x89, 0x04, 0x0a, 0x07, 0x6d, 0x65, 0x73,
      0x73, 0x61, 0x67, 0x65, 0x10, 0x08, 0x18, 0x04, 0x22, 0x04, 0x4d, 0x61,
      0x69, 0x6c, 0x32, 0x20, 0x4b, 0xd8, 0xa9, 0xa2, 0xb9, 0x34, 0x27, 0xbb,
      0x18, 0x4a, 0xca, 0x81, 0xe2, 0x4b, 0xeb, 0x30, 0xff, 0xa3, 0xc7, 0x47,
      0xe2, 0xa3, 0x3d, 0x42, 0x25, 0xec, 0x08, 0xbf, 0x12, 0xe2, 0xe7, 0x53,
      0x3a, 0xb7, 0x01, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x10, 0x08, 0x18,
      0x02, 0x22, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x32, 0x20, 0xfa,
      0xbf, 0xe1, 0xed, 0x99, 0x63, 0x49, 0xfc, 0x60, 0x27, 0x70, 0x98, 0x02,
      0xbe, 0x19, 0xd0, 0x47, 0xda, 0x1a, 0xa5, 0xd6, 0x89, 0x4f, 0xf5, 0xf6,
      0x48, 0x6d, 0x92, 0xdb, 0x2e, 0x68, 0x60, 0x3a, 0x17, 0x0a, 0x04, 0x6e,
      0x61, 0x6d, 0x65, 0x10, 0x04, 0x18, 0x03, 0x22, 0x06, 0x73, 0x74, 0x72,
      0x69, 0x6e, 0x67, 0x2a, 0x03, 0x43, 0x6f, 0x77, 0x3a, 0x68, 0x0a, 0x07,
      0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x10, 0x07, 0x18, 0x02, 0x22,
      0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5b, 0x5d, 0x3a, 0x26,
      0x0a, 0x01, 0x30, 0x10, 0x06, 0x18, 0x14, 0x22, 0x07, 0x61, 0x64, 0x64,
      0x72, 0x65, 0x73, 0x73, 0x2a, 0x14, 0xcd, 0x2a, 0x3d, 0x9f, 0x93, 0x8e,
      0x13, 0xcd, 0x94, 0x7e, 0xc0, 0x5a, 0xbc, 0x7f, 0xe7, 0x34, 0xdf, 0x8d,
      0xd8, 0x26, 0x3a, 0x26, 0x0a, 0x01, 0x31, 0x10, 0x06, 0x18, 0x14, 0x22,
      0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0x14, 0xde, 0xad,
      0xbe, 0xef, 0xde, 0xad, 0xbe, 0xef, 0xde, 0xad, 0xbe, 0xef, 0xde, 0xad,
      0xbe, 0xef, 0xde, 0xad, 0xbe, 0xef, 0x3a, 0xf2, 0x01, 0x0a, 0x02, 0x74,
      0x6f, 0x10, 0x07, 0x18, 0x01, 0x22, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f,
      0x6e, 0x5b, 0x5d, 0x3a, 0xdd, 0x01, 0x0a, 0x01, 0x30, 0x10, 0x08, 0x18,
      0x02, 0x22, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x32, 0x20, 0xfa,
      0xbf, 0xe1, 0xed, 0x99, 0x63, 0x49, 0xfc, 0x60, 0x27, 0x70, 0x98, 0x02,
      0xbe, 0x19, 0xd0, 0x47, 0xda, 0x1a, 0xa5, 0xd6, 0x89, 0x4f, 0xf5, 0xf6,
      0x48, 0x6d, 0x92, 0xdb, 0x2e, 0x68, 0x60, 0x3a, 0x17, 0x0a, 0x04, 0x6e,
      0x61, 0x6d, 0x65, 0x10, 0x04, 0x18, 0x03, 0x22, 0x06, 0x73, 0x74, 0x72,
      0x69, 0x6e, 0x67, 0x2a, 0x03, 0x42, 0x6f, 0x62, 0x3a, 0x90, 0x01, 0x0a,
      0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x10, 0x07, 0x18, 0x03,
      0x22, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5b, 0x5d, 0x3a,
      0x26, 0x0a, 0x01, 0x30, 0x10, 0x06, 0x18, 0x14, 0x22, 0x07, 0x61, 0x64,
      0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0x14, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb,
      0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb,
      0xbb, 0xbb, 0xbb, 0x3a, 0x26, 0x0a, 0x01, 0x31, 0x10, 0x06, 0x18, 0x14,
      0x22, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0x14, 0xb0,
      0xbd, 0xab, 0xea, 0x57, 0xb0, 0xbd, 0xab, 0xea, 0x57, 0xb0, 0xbd, 0xab,
      0xea, 0x57, 0xb0, 0xbd, 0xab, 0xea, 0x57, 0x3a, 0x26, 0x0a, 0x01, 0x32,
      0x10, 0x06, 0x18, 0x14, 0x22, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
      0x73, 0x2a, 0x14, 0xb0, 0xb0, 0xb0, 0xb0, 0xb0, 0xb0, 0xb0, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a,
      0x23, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x10,
      0x04, 0x18, 0x0b, 0x22, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2a,
      0x0b, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x42, 0x6f, 0x62, 0x21};

  pb_istream_t stream =
      pb_istream_from_buffer(received_buffer, sizeof(received_buffer));
  status = pb_decode(&stream, MessageData_fields, &message);

  if (!status) {
    printf("Decoding failed: %s\n", PB_GET_ERROR(&stream));
    ASSERT(false);
  }
  uint8_t output[32] = {0};
  uint8_t domain_hash[32] = {0x3e, 0x6a, 0x90, 0x3b, 0x77, 0xda, 0xf9, 0x8a,
                             0x22, 0xf0, 0x75, 0x9b, 0xda, 0x51, 0x11, 0xee,
                             0x53, 0xbe, 0xc7, 0xac, 0x30, 0x53, 0x9a, 0x4b,
                             0x86, 0x95, 0x08, 0x73, 0xd3, 0x97, 0xbe, 0x5f};
  uint8_t message_hash[32] = {0xeb, 0x42, 0x21, 0x18, 0x1f, 0xf3, 0xf1, 0xa8,
                              0x3e, 0xa7, 0x31, 0x39, 0x93, 0xca, 0x92, 0x18,
                              0x49, 0x6e, 0x42, 0x46, 0x04, 0xba, 0x94, 0x92,
                              0xbb, 0x40, 0x52, 0xc0, 0x3d, 0x5c, 0x3d, 0xf8};
  ASSERT(hash_struct(&message->eip712data.domain, output) == 0);
  ASSERT(memcmp(output, domain_hash, sizeof(output)) == 0);
  memzero(output, sizeof(output));
  ASSERT(hash_struct(&message->eip712data.message, output) == 0);
  ASSERT(memcmp(output, message_hash, sizeof(output)) == 0);
}

#endif /* EIP712_UNIT_TESTS */